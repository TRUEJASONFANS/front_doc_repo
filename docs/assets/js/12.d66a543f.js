(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{214:function(t,a,s){"use strict";s.r(a);var e=s(1),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"盒模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#盒模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),s("p",[t._v("盒子准则")]),t._v(" "),s("ol",[s("li",[t._v("世界是由一个个盒子组成。")]),t._v(" "),s("li",[t._v("每一个盒子分为内外盒子, 外盒子主要负责结构(是否占一行)，内联盒子负责内容(宽和高)")])]),t._v(" "),s("h2",{attrs:{id:"元素的display特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#元素的display特性","aria-hidden":"true"}},[t._v("#")]),t._v(" 元素的display特性")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("块级元素(block)：独占一行，对宽高的属性值生效；如果不给宽度，块级元素就默认为浏览器的宽度，即就是100%宽。\nblock-block 元素")])]),t._v(" "),s("li",[s("p",[t._v("行内元素(inline)：可以多个标签存在一行，对宽高属性值不生效，完全靠内容撑开宽高。(那怎么来调节行内元素的高度呢？)\ninline-inline 元素")])]),t._v(" "),s("li",[s("p",[t._v("行内块元素(inline-block)：结合的行内和块级的优点，既可以设置长宽，可以让padding和margin生效，又可以和其他行内元素并排。\ninline-block 元素")])]),t._v(" "),s("li",[s("p",[t._v("例外：替换元素是inline 元素，但却可以设置宽和高")]),t._v(" "),s("ol",[s("li",[t._v("img")]),t._v(" "),s("li",[t._v("input")])])])]),t._v(" "),s("h2",{attrs:{id:"例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#例子","aria-hidden":"true"}},[t._v("#")]),t._v(" 例子")]),t._v(" "),s("h2",{attrs:{id:"内联元素高度之本line-height"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内联元素高度之本line-height","aria-hidden":"true"}},[t._v("#")]),t._v(" 内联元素高度之本line-height")]),t._v(" "),s("ol",[s("li",[t._v("内联的元素的高度由line-height确定，如果还有替换元素，则决定最小高度")]),t._v(" "),s("li",[t._v("对于块级元素，line-height对起本身并没有任何作用，我们平时改变line-height,块级元素的高度跟着变化实际上是通过改变块级元素的内联级别元素的高度实现，定义其中行框盒子的最小高度")])]),t._v(" "),s("h2",{attrs:{id:"line-height的好朋友vertical-align"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#line-height的好朋友vertical-align","aria-hidden":"true"}},[t._v("#")]),t._v(" line-height的好朋友vertical-align")]),t._v(" "),s("ol",[s("li",[t._v("只能应用于内联元素")]),t._v(" "),s("li",[t._v("以及display位table-cell的元素")]),t._v(" "),s("li",[t._v("其百分比值是依据line-height计算得到")])]),t._v(" "),s("h2",{attrs:{id:"什么是流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是流","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是流")]),t._v(" "),s("p",[t._v("文档流指的是元素排版布局过程中，元素会默认自动从左往右，从上往下的流式排列方式。并最终窗体自上而下分成一行行，并在每行中从左至右的顺序排放元素。\ncss 世界的流似乎就像现实世界的水流一样， 流本身具有自适应性。 比如块级元素在水平方向的流体特性")]),t._v(" "),s("h2",{attrs:{id:"position"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#position","aria-hidden":"true"}},[t._v("#")]),t._v(" position")]),t._v(" "),s("p",[t._v("position 的四个值：")]),t._v(" "),s("ul",[s("li",[t._v("static 默认在流中的位置")]),t._v(" "),s("li",[t._v("relative 相对于原来所在流的位置进行偏移. "),s("strong",[t._v("依旧跟文档流相关")])]),t._v(" "),s("li",[t._v("absolute 生成绝对定位的元素，相对于 static 定位以外的第一个父元素进行定位。"),s("strong",[t._v("脱离文档流")])]),t._v(" "),s("li",[t._v("fixed 生成绝对定位的元素，相对于浏览器窗口进行定位。"),s("strong",[t._v("脱离文档流")])])]),t._v(" "),s("p",[t._v("默认值：static")]),t._v(" "),s("h3",{attrs:{id:"什么叫父相子绝"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么叫父相子绝","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么叫父相子绝")]),t._v(" "),s("p",[t._v("父亲节点相对定位， 儿子节点绝对定位\n“子绝父相”的意义：这样可以保证父亲没有脱标，儿子脱标在父亲的范围里面移动。于是，工程上经常这样做：\n父亲浮动，设置相对定位（零偏移），然后让儿子绝对定位一定的距离。")]),t._v(" "),s("h2",{attrs:{id:"css3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css3","aria-hidden":"true"}},[t._v("#")]),t._v(" css3")]),t._v(" "),s("h3",{attrs:{id:"flex-盒子布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flex-盒子布局","aria-hidden":"true"}},[t._v("#")]),t._v(" flex 盒子布局")]),t._v(" "),s("h4",{attrs:{id:"自定义新世界流！"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义新世界流！","aria-hidden":"true"}},[t._v("#")]),t._v(" 自定义新世界流！")]),t._v(" "),s("ol",[s("li",[t._v("给div这类块状元素元素设置display:flex或者给span这类内联元素设置display:inline-flex，flex布局即创建！")]),t._v(" "),s("li",[t._v("其中，直接设置display:flex或者display:inline-flex的元素称为flex容器，里面的子元素称为flex子项。")]),t._v(" "),s("li",[t._v("在容器中定义对齐方式和流向")]),t._v(" "),s("li",[t._v("在子项中定义自适应性")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2018/10/display-flex-css3-css/",target:"_blank",rel:"noopener noreferrer"}},[t._v("张鑫旭写给自己看的display: flex布局教程"),s("OutboundLink")],1)])]),t._v(" "),s("h3",{attrs:{id:"float"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#float","aria-hidden":"true"}},[t._v("#")]),t._v(" float")]),t._v(" "),s("ol",[s("li",[t._v("使用float脱离文档流时，其他盒子会无视这个元素，但其他盒子内的文本依然会为这个元素让出位置，环绕在周围。")]),t._v(" "),s("li",[t._v("包裹性")]),t._v(" "),s("li",[t._v("BFC 块状格式化上下文")]),t._v(" "),s("li",[t._v("破坏文档流")]),t._v(" "),s("li",[t._v("没有任何margin合并")])]),t._v(" "),s("h2",{attrs:{id:"设计原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计原则","aria-hidden":"true"}},[t._v("#")]),t._v(" 设计原则")]),t._v(" "),s("ol",[s("li",[t._v("不破坏流的特性")]),t._v(" "),s("li",[t._v("无宽度原则 ， 如果实在需用， 利用宽度分离原则，在父元素定义宽度，在子元素使用margin, padding "),s("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2010/10/%e9%a1%b5%e9%9d%a2%e9%87%8d%e6%9e%84%e2%80%9c%e9%91%ab%e4%b8%89%e6%97%a0%e5%87%86%e5%88%99%e2%80%9d-%e4%b9%8b%e2%80%9c%e6%97%a0%e5%ae%bd%e5%ba%a6%e2%80%9d%e5%87%86%e5%88%99/",target:"_blank",rel:"noopener noreferrer"}},[t._v("页面重构“鑫三无准则”-之“无宽度”准则/"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("无图片"),s("a",{attrs:{href:"https://www.zhangxinxu.com/wordpress/2011/05/css%e9%a1%b5%e9%9d%a2%e9%87%8d%e6%9e%84%e9%91%ab%e4%b8%89%e6%97%a0%e5%87%86%e5%88%99%e4%b9%8b%e6%97%a0%e5%9b%be%e7%89%87%e5%87%86%e5%88%99/",target:"_blank",rel:"noopener noreferrer"}},[t._v("css页面重构鑫三无准则之无图片准则"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("无浮动")])]),t._v(" "),s("h2",{attrs:{id:"width-和height的作用细节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#width-和height的作用细节","aria-hidden":"true"}},[t._v("#")]),t._v(" width 和height的作用细节")]),t._v(" "),s("ol",[s("li",[t._v("默认值auto 充满了水流")])]),t._v(" "),s("h2",{attrs:{id:"inline-box"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inline-box","aria-hidden":"true"}},[t._v("#")]),t._v(" inline-box")]),t._v(" "),s("ol",[s("li",[t._v("内联盒子和匿名内联盒子")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("这是一行普通文字，这里有个"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("em")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("em"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("em")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("标签"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- <em>内是内联盒子 --\x3e")]),t._v("\n")])])]),s("p",[t._v("这是一行。。这里这个是一个匿名内链盒子")]),t._v(" "),s("p",[t._v("光秃秃的文字可能是内联盒子，也可能是块级盒子， 得看前后的标签是内联还是块级。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("行框盒子")])]),t._v(" "),s("p",[t._v("每一行就是一个行框盒子，每个行框盒子又是由一个一个内联盒子组成的。")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("包含盒子\n")]),s("p",[t._v(" 标签就是一个包含盒子")])]),t._v(" "),s("li",[s("p",[t._v("幽灵空白节点\nstrut “支柱”，幽灵盒子 是一个存在于每个“行框盒子”前面，同时具有该元素的字体和行高属性的0宽度的内联盒。")])])]),t._v(" "),s("h2",{attrs:{id:"width：auto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#width：auto","aria-hidden":"true"}},[t._v("#")]),t._v(" width：auto")]),t._v(" "),s("ol",[s("li",[t._v("外部尺寸 Extrinsic Sizing 宽度由外部元素决定 典型如块状元素， 默认100%宽度, margin/border/padding/content 内容区域自动分配水平空间的限制\n"),s("ol",[s("li",[t._v("正常流宽度")]),t._v(" "),s("li",[t._v("格式化宽度")])])]),t._v(" "),s("li",[t._v("内部尺寸 Intrinsic Sizing 宽度由内部元素决定\n"),s("ol",[s("li",[t._v("包裹性")]),t._v(" "),s("li",[t._v("自适应性->智能宽度")])])]),t._v(" "),s("li",[t._v("宽度width 是作用于content盒子上\n"),s("ol",[s("li",[t._v("css流体布局下的宽度分离原子, width独立占用一层标签，而padding,border,margin利用流动性在内部自适应呈现.")])])])]),t._v(" "),s("h2",{attrs:{id:"盒尺寸四大家族-margin-box-boder-box-padding-box-content-box"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#盒尺寸四大家族-margin-box-boder-box-padding-box-content-box","aria-hidden":"true"}},[t._v("#")]),t._v(" 盒尺寸四大家族 margin box, boder box, padding box, content box")]),t._v(" "),s("h3",{attrs:{id:"替换元素的特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#替换元素的特性","aria-hidden":"true"}},[t._v("#")]),t._v(" 替换元素的特性")]),t._v(" "),s("ol",[s("li",[t._v("内容的外观不受页面上的css的影响(样式表现在css作用域之外)")]),t._v(" "),s("li",[t._v("有自己的尺寸")]),t._v(" "),s("li",[t._v("在很多css属性上有自己一套的表现规则。比如veritical-align")])]),t._v(" "),s("h3",{attrs:{id:"替换元素与非替换元素的距离-content"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#替换元素与非替换元素的距离-content","aria-hidden":"true"}},[t._v("#")]),t._v(" 替换元素与非替换元素的距离 content")]),t._v(" "),s("ol",[s("li",[t._v("只隔一个src属性")]),t._v(" "),s("li",[t._v("有无content属性")])]),t._v(" "),s("h3",{attrs:{id:"padding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#padding","aria-hidden":"true"}},[t._v("#")]),t._v(" padding")]),t._v(" "),s("ol",[s("li",[t._v("padding 与width 无关，除非设置box-sizing")]),t._v(" "),s("li",[t._v("padding 百分比值 是基于宽度计算\n块状元素")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("\x3c!-- 正方形框 --\x3e\ndiv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("%50"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("\x3c!-- 矩形框 --\x3e\ndiv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 25% 50%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("h3",{attrs:{id:"margin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#margin","aria-hidden":"true"}},[t._v("#")]),t._v(" margin")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("元素对应方向具有自动填充特性\nmargin:auto\n")])])]),s("ol",[s("li",[t._v("margin:auto 天生为左右对其而设计。(左右等分margin, 就像text-align:center一样),效果前提：")]),t._v(" "),s("li",[t._v("绝对定位的元素将会单独渲染，非定位方向margin 作用将会被忽略")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("30%\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("30px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" //无效\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".example")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("vertical-align")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" middle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 没有作用 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("vertical-align:\n"),s("ol",[s("li",[t._v("top\n"),s("ol",[s("li",[t._v("内联元素：元素底部和当前行框盒子的顶部对齐")]),t._v(" "),s("li",[t._v("table-cell 元素底部padding边缘和表格行的顶部对齐")])])]),t._v(" "),s("li",[t._v("bottom\n"),s("ol",[s("li",[t._v("内联元素：元素底部和当前行框盒子的底部对齐")]),t._v(" "),s("li",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("table-cell 元素底部padding边缘和表格行的底部对齐")])])])])]),t._v(" "),s("li",[t._v("top/bottom看行框盒子")]),t._v(" "),s("li",[t._v("baseline/middle是和字符x打交道")])])])])])},[],!1,null,null,null);a.default=n.exports}}]);