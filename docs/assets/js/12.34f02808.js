(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{215:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"盒模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#盒模型","aria-hidden":"true"}},[t._v("#")]),t._v(" 盒模型")]),t._v(" "),s("h2",{attrs:{id:"inline-box"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inline-box","aria-hidden":"true"}},[t._v("#")]),t._v(" inline-box")]),t._v(" "),s("ol",[s("li",[t._v("内联盒子和匿名内联盒子")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("这是一行普通文字，这里有个"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("em")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("em"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("em")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("标签"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- <em>内是内联盒子 --\x3e")]),t._v("\n")])])]),s("p",[t._v("这是一行。。这里这个是一个匿名内链盒子")]),t._v(" "),s("p",[t._v("光秃秃的文字可能是内联盒子，也可能是块级盒子， 得看前后的标签是内联还是块级。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("行框盒子")])]),t._v(" "),s("p",[t._v("每一行就是一个行框盒子，每个行框盒子又是由一个一个内联盒子组成的。")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("包含盒子\n")]),s("p",[t._v(" 标签就是一个包含盒子")])]),t._v(" "),s("li",[s("p",[t._v("幽灵空白节点\nstrut “支柱”，幽灵盒子 是一个存在于每个“行框盒子”前面，同时具有该元素的字体和行高属性的0宽度的内联盒。")])])]),t._v(" "),s("h2",{attrs:{id:"一切皆是流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一切皆是流","aria-hidden":"true"}},[t._v("#")]),t._v(" 一切皆是流")]),t._v(" "),s("p",[t._v("元素的内外盒子, 外盒子主要负责结构(是否占一行)，内联盒子负责内容(宽和高)")]),t._v(" "),s("h2",{attrs:{id:"设计原则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计原则","aria-hidden":"true"}},[t._v("#")]),t._v(" 设计原则")]),t._v(" "),s("ol",[s("li",[t._v("不破坏流的特性")]),t._v(" "),s("li")]),t._v(" "),s("h2",{attrs:{id:"width：auto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#width：auto","aria-hidden":"true"}},[t._v("#")]),t._v(" width：auto")]),t._v(" "),s("ol",[s("li",[t._v("外部尺寸 Extrinsic Sizing 宽度由外部元素决定 典型如块状元素， 默认100%宽度, margin/border/padding/content 内容区域自动分配水平空间的限制\n"),s("ol",[s("li",[t._v("正常流宽度")]),t._v(" "),s("li",[t._v("格式化宽度")])])]),t._v(" "),s("li",[t._v("内部尺寸 Intrinsic Sizing 宽度由内部元素决定\n"),s("ol",[s("li",[t._v("包裹性")]),t._v(" "),s("li",[t._v("自适应性->智能宽度")])])]),t._v(" "),s("li",[t._v("宽度width 是作用于content盒子上\n"),s("ol",[s("li",[t._v("css流体布局下的宽度分离原子, width独立占用一层标签，而padding,border,margin利用流动性在内部自适应呈现.")])])])]),t._v(" "),s("h2",{attrs:{id:"盒尺寸四大家族"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#盒尺寸四大家族","aria-hidden":"true"}},[t._v("#")]),t._v(" 盒尺寸四大家族")]),t._v(" "),s("h3",{attrs:{id:"替换元素的特性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#替换元素的特性","aria-hidden":"true"}},[t._v("#")]),t._v(" 替换元素的特性")]),t._v(" "),s("ol",[s("li",[t._v("内容的外观不受页面上的css的影响(样式表现在css作用域之外)")]),t._v(" "),s("li",[t._v("有自己的尺寸")]),t._v(" "),s("li",[t._v("在很多css属性上有自己一套的表现规则。比如veritical-align")])]),t._v(" "),s("h3",{attrs:{id:"替换元素与非替换元素的距离-content"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#替换元素与非替换元素的距离-content","aria-hidden":"true"}},[t._v("#")]),t._v(" 替换元素与非替换元素的距离 content")]),t._v(" "),s("ol",[s("li",[t._v("只隔一个src属性")]),t._v(" "),s("li",[t._v("有无content属性")])]),t._v(" "),s("h3",{attrs:{id:"padding"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#padding","aria-hidden":"true"}},[t._v("#")]),t._v(" padding")]),t._v(" "),s("ol",[s("li",[t._v("padding 与width 无关，除非设置box-sizing")]),t._v(" "),s("li",[t._v("padding 百分比值 是基于宽度计算\n块状元素")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("\x3c!-- 正方形框 --\x3e\ndiv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("%50"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("\x3c!-- 矩形框 --\x3e\ndiv")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 25% 50%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n")])])]),s("h3",{attrs:{id:"margin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#margin","aria-hidden":"true"}},[t._v("#")]),t._v(" margin")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[t._v("元素对应方向具有自动填充特性\nmargin:auto\n")])])]),s("ol",[s("li",[t._v("margin:auto 天生为左右对其而设计。(左右等分margin, 就像text-align:center一样),效果前提：")]),t._v(" "),s("li",[t._v("绝对定位的元素将会单独渲染，非定位方向margin 作用将会被忽略")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("top")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10%"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("left")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("30%\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-right")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("30px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" //无效\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"内联元素高度之本line-height"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内联元素高度之本line-height","aria-hidden":"true"}},[t._v("#")]),t._v(" 内联元素高度之本line-height")]),t._v(" "),s("ol",[s("li",[t._v("内联的元素的高度由line-height确定，如果还有替换元素，则决定最小高度")]),t._v(" "),s("li",[t._v("对于块级元素，line-height对起本身并没有任何作用，我们平时改变line-height,块级元素的高度跟着变化实际上是通过改变块级元素的内联级别元素的高度实现，定义其中行框盒子的最小高度")])]),t._v(" "),s("h2",{attrs:{id:"line-height的好朋友vertical-align"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#line-height的好朋友vertical-align","aria-hidden":"true"}},[t._v("#")]),t._v(" line-height的好朋友vertical-align")]),t._v(" "),s("ol",[s("li",[t._v("只能应用于内联元素")]),t._v(" "),s("li",[t._v("以及display位table-cell的元素")]),t._v(" "),s("li",[t._v("其百分比值是依据line-height计算得到")])]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[s("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".example")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("left"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("vertical-align")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" middle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 没有作用 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[t._v("vertical-align:\n"),s("ol",[s("li",[t._v("top\n"),s("ol",[s("li",[t._v("内联元素：元素底部和当前行框盒子的顶部对齐")]),t._v(" "),s("li",[t._v("table-cell 元素底部padding边缘和表格行的顶部对齐")])])]),t._v(" "),s("li",[t._v("bottom\n"),s("ol",[s("li",[t._v("内联元素：元素底部和当前行框盒子的底部对齐")]),t._v(" "),s("li",[s("ol",{attrs:{start:"2"}},[s("li",[t._v("table-cell 元素底部padding边缘和表格行的底部对齐")])])])])]),t._v(" "),s("li",[t._v("top/bottom看行框盒子")]),t._v(" "),s("li",[t._v("baseline/middle是和字符x打交道")])])])])])},[],!1,null,null,null);a.default=e.exports}}]);