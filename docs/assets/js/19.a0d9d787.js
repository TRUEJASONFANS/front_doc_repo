(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{210:function(e,r,a){"use strict";a.r(r);var t=a(1),s=Object(t.a)({},function(){var e=this,r=e.$createElement,a=e._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"其他打包器相关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他打包器相关","aria-hidden":"true"}},[e._v("#")]),e._v(" 其他打包器相关")]),e._v(" "),a("h2",{attrs:{id:"parcel-概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parcel-概念","aria-hidden":"true"}},[e._v("#")]),e._v(" Parcel 概念")]),e._v(" "),a("p",[e._v("是一个快速的、零配置的网页应用打包器，并且可以搭配 React 一起工作,极速零配置Web应用打包工具\nParcel是基于资源的,资源可以代表任意文件,并且 Parcel 对 JavaScript,CSS,HTML文件有更多的支持Parcel会自动地分析这些文件和包中引用的依赖.相同类型的资源会被组合到同一捆绑包中.如果导入其他类型的资源（例如:你在JS文件中导入CSS文件),Parcel会启动子捆绑包,并在父捆绑包中保留对它的引用.")]),e._v(" "),a("h2",{attrs:{id:"neutrino"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#neutrino","aria-hidden":"true"}},[e._v("#")]),e._v(" Neutrino")]),e._v(" "),a("pre",[a("code",[e._v("把 webpack 的强大功能和简单预设结合在一起。并且包括了 React 应用和 React 组件的预设。(脚手架库)\n")])]),e._v(" "),a("h2",{attrs:{id:"nwb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nwb","aria-hidden":"true"}},[e._v("#")]),e._v(" nwb")]),e._v(" "),a("pre",[a("code",[e._v("特别适合于将 React 组件发布到 npm。它也能用于创造 React 应用\n")])]),e._v(" "),a("h2",{attrs:{id:"browserify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#browserify","aria-hidden":"true"}},[e._v("#")]),e._v(" browserify")]),e._v(" "),a("pre",[a("code",[e._v("require('modules') in the browser\nUse a node-style require() to organize your browser code and load modules installed by npm.\nbrowserify will recursively analyze all the require() calls in your app in order to build a bundle you can serve up to the browser in a single <script> tag.\n")])])])},[],!1,null,null,null);r.default=s.exports}}]);