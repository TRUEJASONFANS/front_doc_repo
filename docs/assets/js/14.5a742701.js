(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{212:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 布局")]),t._v(" "),s("h2",{attrs:{id:"静态布局-static-layout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态布局-static-layout","aria-hidden":"true"}},[t._v("#")]),t._v(" 静态布局 (Static layout)")]),t._v(" "),s("p",[s("strong",[t._v("特点")]),t._v("：不管浏览器尺寸具体是多少，网页布局始终按照最初写代码时的布局来显示。常规的pc的网站都是静态（定宽度）布局的，也就是设置了min-width，这样的话，如果小于这个宽度就会出现滚动条，如果大于这个宽度则内容居中外加背景，这种设计常见于pc端。（hard code 式布局)")]),t._v(" "),s("ol",[s("li",[t._v("优点：这种布局方式对设计师和CSS编写者来说都是最简单的，亦没有兼容性问题。")]),t._v(" "),s("li",[t._v("缺点：显而易见，即不能根据用户的屏幕尺寸做出不同的表现。当前，大部分门户网站、大部分企业的PC宣传站点都采用了这种布局方式。固定像素尺寸的网页是匹配固定像素尺寸显示器的最简单办法。但这种方法不是一种完全兼容未来网页的制作方法，我们需要一些适应未知设备的方法。")])]),t._v(" "),s("h2",{attrs:{id:"流式布局-liquid-layout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流式布局-liquid-layout","aria-hidden":"true"}},[t._v("#")]),t._v(" 流式布局 (Liquid layout)")]),t._v(" "),s("p",[s("strong",[t._v("特点")]),t._v(":屏幕分辨率变化时，页面里元素的大小会变化而但布局不变。你变我也变")]),t._v(" "),s("h3",{attrs:{id:"设计方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 设计方法")]),t._v(" "),s("p",[t._v("使用%百分比定义宽度，高度大都是用px来固定住，可以根据可视区域 (viewport) 和父元素的实时尺寸进行调整，尽可能的适应各种分辨率。往往配合 max-width/min-width 等属性控制尺寸流动范围以免过大或者过小影响阅读。")]),t._v(" "),s("p",[t._v("这种布局方式在Web前端开发的早期历史上，用来应对不同尺寸的PC屏幕（那时屏幕尺寸的差异不会太大），在当今的移动端开发也是常用布局方式，但缺点明显：主要的问题是如果屏幕尺度跨度太大，那么在相对其原始设计而言过小或过大的屏幕上不能正常显示。因为宽度使用%百分比定义，但是高度和文字大小等大都是用px来固定，所以在大屏幕的手机下显示效果会变成有些页面元素宽度被拉的很长，但是高度、文字大小还是和原来一样（即，这些东西无法变得“流式”），显示非常不协调.(（宽度用相对, 宽度用绝对)")]),t._v(" "),s("h2",{attrs:{id:"自适应布局（adaptive-layout）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自适应布局（adaptive-layout）","aria-hidden":"true"}},[t._v("#")]),t._v(" 自适应布局（Adaptive Layout）")]),t._v(" "),s("p",[t._v("自适应布局的特点是分别为不同的屏幕分辨率定义布局，即创建多个静态布局，每个静态布局对应一个屏幕分辨率范围。改变屏幕分辨率可以切换不同的静态局部（页面元素位置发生改变），但在每个静态布局中，页面元素不随窗口大小的调整发生变化。可以把自适应布局看作是静态布局的一个系列。")]),t._v(" "),s("p",[s("strong",[t._v("特点")]),t._v(":布局特点 屏幕分辨率变化时，页面里面元素的位置会变化而大小不会变化。")]),t._v(" "),s("h3",{attrs:{id:"设计方法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计方法-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 设计方法")]),t._v(" "),s("p",[t._v("使用 @media 媒体查询给不同尺寸和介质的设备切换不同的样式。在优秀的响应范围设计下可以给适配范围内的设备最好的体验，在同一个设备下"),s("strong",[t._v("实际还是固定的布局")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"响应式布局（responsive-layout）-流式布局-自适应布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#响应式布局（responsive-layout）-流式布局-自适应布局","aria-hidden":"true"}},[t._v("#")]),t._v(" 响应式布局（Responsive Layout）[流式布局+自适应布局]")]),t._v(" "),s("p",[t._v("随着CSS3出现了媒体查询技术，又出现了响应式设计的概念。响应式设计的目标是确保一个页面在所有终端上（各种尺寸的PC、手机、手表、冰箱的Web浏览器等等）都能显示出令人满意的效果，对CSS编写者而言，在实现上不拘泥于具体手法，但通常是糅合了流式布局+弹性布局，再搭配媒体查询技术使用。——分别为不同的屏幕分辨率定义布局，同时，在每个布局中，应用流式布局的理念，即页面元素宽度随着窗口调整而自动适配。即：创建多个流体式布局，分别对应一个屏幕分辨率范围。"),s("strong",[t._v("可以把响应式布局看作是流式布局和自适应布局设计理念的融合")]),t._v("。\n"),s("strong",[t._v("响应式几乎已经成为优秀页面布局的标准")])]),t._v(" "),s("ol",[s("li",[t._v("布局特点\n　　每个屏幕分辨率下面会有一个布局样式，即元素位置和大小都会变。")]),t._v(" "),s("li",[t._v("设计方法\n　　媒体查询+流式布局。通常使用 @media 媒体查询 和网格系统 (Grid System) 配合相对布局单位进行布局，实际上就是综合响应式、流动等上述技术通过 CSS 给单一网页不同设备返回不同样式的技术统称。\n优点：适应pc和移动端，如果足够耐心，效果完美。\n缺点：（1）媒体查询是有限的，也就是可以枚举出来的，只能适应主流的宽高。（2）要匹配足够多的屏幕大小，工作量不小，设计也需要多个版本。")])]),t._v(" "),s("p",[t._v("响应式页面在头部会加上这一段代码：")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("applicable-device"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("pc,mobile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("meta")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("http-equiv")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("Cache-Control"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("content")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("no-transform "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])])])},[],!1,null,null,null);a.default=e.exports}}]);